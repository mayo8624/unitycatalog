/*
 * Unity Catalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.unitycatalog.server.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.unitycatalog.server.model.VolumeOperation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GenerateTemporaryVolumeCredential
 */
@JsonPropertyOrder({
  GenerateTemporaryVolumeCredential.JSON_PROPERTY_VOLUME_ID,
  GenerateTemporaryVolumeCredential.JSON_PROPERTY_OPERATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class GenerateTemporaryVolumeCredential {
  public static final String JSON_PROPERTY_VOLUME_ID = "volume_id";
  private String volumeId;

  public static final String JSON_PROPERTY_OPERATION = "operation";
  private VolumeOperation operation;

  public GenerateTemporaryVolumeCredential() {
  }

  public GenerateTemporaryVolumeCredential volumeId(String volumeId) {
    
    this.volumeId = volumeId;
    return this;
  }

   /**
   * Volume id for which temporary credentials are generated.  Can be obtained from volumes/{full_name} (get volume info) API. 
   * @return volumeId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VOLUME_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVolumeId() {
    return volumeId;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVolumeId(String volumeId) {
    this.volumeId = volumeId;
  }


  public GenerateTemporaryVolumeCredential operation(VolumeOperation operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VolumeOperation getOperation() {
    return operation;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperation(VolumeOperation operation) {
    this.operation = operation;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateTemporaryVolumeCredential generateTemporaryVolumeCredential = (GenerateTemporaryVolumeCredential) o;
    return Objects.equals(this.volumeId, generateTemporaryVolumeCredential.volumeId) &&
        Objects.equals(this.operation, generateTemporaryVolumeCredential.operation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(volumeId, operation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateTemporaryVolumeCredential {\n");
    sb.append("    volumeId: ").append(toIndentedString(volumeId)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

